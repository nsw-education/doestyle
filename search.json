[{"path":"https://nsw-education.github.io/doestyle/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing","title":"Contributing","text":"contributing doestyle, please discuss change wish make via project’s kanban board, Teams channel, even email. ’re sure get started, please read Setting development environment, Contribution workflow - tutorial watch video walkthrough. ’re comfortable Git working open source software, can probably skip Conventions.","code":""},{"path":"https://nsw-education.github.io/doestyle/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing","text":"follow NSW Department Education Code Conduct. importantly, please kind potential contributors. R users developers across entire spectrum experience, want foster safe environment - hopefully desire engage open source software projects.","code":""},{"path":"https://nsw-education.github.io/doestyle/CONTRIBUTING.html","id":"setting-up-your-development-environment","dir":"","previous_headings":"","what":"Setting up your development environment","title":"Contributing","text":"need R (>=4.1), RStudio (>=2024.12) Git. DoE devices, can install Company Portal. Clone doestyle Git repository: https://bitbucket.org/nsw-education/doestyle. ’re confident Git user, easiest way RStudio: Navigate File -> New Project -> Version Control -> Git Paste https://bitbucket.org/nsw-education/doestyle ‘Repository URL’ field Use ‘Browse’ button choose directory computer hold doestyle RStudio project directory. Click ‘Create Project’. RStudio Git clone project open project RStudio, ready use. check development environment set , can try building doestyle package. doestyle RStudio project open, navigate Build -> Install Package (use Ctrl+Shift+B, Windows). RStudio initiate package build installation. able see progress RStudio’s ‘Build’ pane. ’ll generally need clone repository . future, want work doestyle, can open RStudio project directory chose cloning. , usually start work using ‘Pull’ Git pane ensure working current state doestyle repository.","code":""},{"path":"https://nsw-education.github.io/doestyle/CONTRIBUTING.html","id":"contribution-workflow---tutorial","dir":"","previous_headings":"","what":"Contribution workflow - tutorial","title":"Contributing","text":"many workflows achieve similar outcomes, simple approach contributing feature bugfix. also similar workflow used open source software wild. general process : Create branch work Work new branch RStudio Open Bitbucket pull request merge work doestyle accompanying video tutorial demonstrates workflow. point prompted Git Bitbucket log , choose ‘Authenticate browser’ log using usual DoE single-sign-process.","code":""},{"path":"https://nsw-education.github.io/doestyle/CONTRIBUTING.html","id":"create-a-branch-for-your-work","dir":"","previous_headings":"Contribution workflow - tutorial","what":"Create a branch for your work","title":"Contributing","text":"doestyle use, make changes new Git branches, rather changing released production code use. lets us test check new code making available everyone new release. Select create issue doestyle Jira kanban board, using Jira interface, create new Git branch work: Click issue Jira open . issue’s right-hand ‘Details’ panel, ‘Development’, click ‘Create branch’ ‘Create branch Bitbucket Cloud’. ‘Repository’ already set nsw-education/doestyle. Set ‘Type’ appropriate want work - likely ‘Feature’ ‘Bugfix’. ‘branch’ almost always ‘main’, current branching model. represents starting state new branch. ‘Branch name’ automatic name based Jira issue chose, can alter make shorter readable. Make sure leave issue ID (e.g. -XX) intact front branch name, helps link code Jira issue.","code":""},{"path":"https://nsw-education.github.io/doestyle/CONTRIBUTING.html","id":"work-on-your-new-branch-in-rstudio","dir":"","previous_headings":"Contribution workflow - tutorial","what":"Work on your new branch in RStudio","title":"Contributing","text":"Open doestyle RStudio project cloned Setting development environment, . Run git pull git fetch retrieve current state repository. easiest way click ‘Pull’ RStudio’s Git pane. top right corner Git pane, ’ll see name current branch - likely, main. Click drop-see list branches. (REMOTE: ORIGIN) see branch created. Click branch switch . RStudio show output Git command. see output looks like Switched new branch [new branch name], can close Git output window. Add, remove edit code needed implement change. Save file(s) ’re working . RStudio Git panel, click checkbox next file want include commit. Click ‘Commit pending changes’ button. Depending screen resolution size Git panel, button may labelled. RStudio 2024.12, button looks like checkbox tick. Write commit message describe change. first line commit message short description change. Ideally, use imperative mood (telling computer ), produces commit messages shorter easier read. example, commit message associated adding guide something like “Add contributor’s guide”. ’s typical make series commits work new feature. Choosing appropriate chunks work commit , skill develop practice. nice goal commits tell sensible, sequential story implemented feature fix, don’t get hung . ready include committed code doestyle package, use git push push branch back central Bitbucket Git repository. easiest way ‘Push’ button RStudio’s Git pane.","code":""},{"path":"https://nsw-education.github.io/doestyle/CONTRIBUTING.html","id":"open-a-bitbucket-pull-request-to-merge-your-work-into-doestyle","dir":"","previous_headings":"Contribution workflow - tutorial","what":"Open a Bitbucket pull request to merge your work into doestyle","title":"Contributing","text":"Every time git push central doestyle repository Bitbucket, Bitbucket runs series tests make sure new code works package can still built. automated tests pass, ’ll able request new code merged doestyle process called ‘pull request’. browser, navigate list branches nsw-education/doestyle. see branch list. ‘Pull request’ column, click ‘Create’. Add details pull request. Bitbucket automatically populate source branch (ie. branch ’ve working ), destination branch (main), title, description reviewers, can update clarify needed. Click ‘Create pull request’ button create pull request notify reviewers. Approve pull request, case code merged main branch become part doestyle. Start conversation request changes branch ready merge. Congratulations - just contributed open source software project!","code":""},{"path":"https://nsw-education.github.io/doestyle/CONTRIBUTING.html","id":"conventions","dir":"","previous_headings":"","what":"Conventions","title":"Contributing","text":"section may worth quick read don’t need tutorial.","code":""},{"path":"https://nsw-education.github.io/doestyle/CONTRIBUTING.html","id":"git-branching-model","dir":"","previous_headings":"Conventions","what":"Git branching model","title":"Contributing","text":"use feature branch workflow. new feature, fix, documentation change made new branch. use branch name prefixes denote type work: feature/, bugfix/, hotfix/ etc. Branches can merged main via pull request passed automated testing approved reviewer.","code":""},{"path":"https://nsw-education.github.io/doestyle/CONTRIBUTING.html","id":"versioning-and-releases","dir":"","previous_headings":"Conventions","what":"Versioning and releases","title":"Contributing","text":"try use semantic versioning. -development versions version number last release, additional version suffix starting 9 - e.g. 0.2.1.9000.","code":""},{"path":"https://nsw-education.github.io/doestyle/CONTRIBUTING.html","id":"continuous-integration-and-testing","dir":"","previous_headings":"Conventions","what":"Continuous integration and testing","title":"Contributing","text":"Continuous integration (CI) run every push, branch, using Bitbucket pipeline defined bitbucket-pipelines.yml. pipeline builds doestyle runs R CMD check, including tests defined tests directory. use testthat framework write unit regression tests. Contribution tests welcome! CI environment Docker container based rocker/tidyverse image. dependencies specified DESCRIPTION installed within CI environment prior building testing doestyle. Pull requests merged main CI pipeline succeeded.","code":""},{"path":"https://nsw-education.github.io/doestyle/CONTRIBUTING.html","id":"style-and-other-conventions","dir":"","previous_headings":"Conventions","what":"Style and other conventions","title":"Contributing","text":"Please use tidyverse style guide code. good idea run styler code submitting pull request - means don’t think much code style, can just let styler take care . possible, please use native pipe, |>, magrittr pipe, %>%.","code":""},{"path":"https://nsw-education.github.io/doestyle/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 NSW Department Education Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://nsw-education.github.io/doestyle/articles/extending_theme_doe.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Extending theme_doe","text":"","code":"library(doestyle) library(dplyr) library(ggplot2) library(stringr)"},{"path":"https://nsw-education.github.io/doestyle/articles/extending_theme_doe.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Extending theme_doe","text":"doestyle includes example dataset: public_schools, NSW Public Schools Master dataset. Typical use theme_doe() scale_fill_doe():  Modify angle colour axis text, orientation legend, adding arguments call theme_doe(). See ggplot2::theme() complete list arguments can passed theme_doe().","code":"head(public_schools) #> # A tibble: 6 × 45 #>   School_code AgeID School_name   Street Town_suburb Postcode Phone School_Email #>   <chr>       <chr> <chr>         <chr>  <chr>       <chr>    <chr> <chr>        #> 1 5423        NA    John Brotchi… 1361 … Botany      2019     9316… johnbrotch-… #> 2 8600        86659 Secondary Co… Level… Parramatta  2150     02 7… SCLanguages… #> 3 8473        46360 Chifley Coll… 67 No… MOUNT DRUI… 2770     9625… chifcolsnr-… #> 4 8325        46407 Moree Second… Alber… Moree       2400     6752… mscalberts-… #> 5 8870        46426 St Marys Sen… Kalan… St Marys    2760     9623… stmaryssen-… #> 6 8374        46489 Brisbane Wat… 25 ED… WOY WOY     2256     4341… woywoy-h.sc… #> # ℹ 37 more variables: Website <chr>, Fax <chr>, #> #   latest_year_enrolment_FTE <dbl>, Indigenous_pct <dbl>, LBOTE_pct <dbl>, #> #   ICSEA_value <dbl>, Level_of_schooling <chr>, Selective_school <chr>, #> #   Opportunity_class <chr>, School_specialty_type <chr>, School_subtype <chr>, #> #   Support_classes <lgl>, Preschool_ind <chr>, Distance_education <chr>, #> #   Intensive_english_centre <chr>, School_gender <chr>, #> #   Late_opening_school <chr>, Date_1st_teacher <date>, LGA <chr>, … public_schools |>   filter(str_detect(Principal_network, \"Connected Communities\")) |>   ggplot(aes(x = Principal_network, fill = Level_of_schooling)) +   geom_bar(colour = \"black\", position = position_dodge(preserve = \"single\")) +   theme_doe() +   labs(y = \"Schools\", x = \"\") +   scale_fill_doe() #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font #> family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font #> family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font #> family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font #> family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font #> family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font #> family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font #> family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family #> 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font #> family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font #> family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font #> family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font #> family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font #> family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font #> family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font #> family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font #> family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font #> family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font #> family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead public_schools |>   filter(str_detect(Principal_network, \"Connected Communities\")) |>   ggplot(aes(x = Principal_network, fill = Level_of_schooling)) +   geom_bar(colour = \"black\", position = position_dodge(preserve = \"single\")) +   theme_doe(axis.text.x = element_text(color = 'blue',                                         angle = 15, # add angle to x-axis labels                                        hjust = 0.75,                                        vjust = 1),              axis.title.y = element_text(color = 'blue',                                         angle = 0), # rotate y-axis title             legend.direction = \"vertical\") + # stack legend text vertically   labs(y = \"Schools\", x = \"\") +   scale_fill_doe() #> Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font #> family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font #> family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font #> family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font #> family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font #> family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font #> family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font #> family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font #> family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font #> family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font #> family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font #> family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font #> family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font #> family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font #> family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font #> family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font #> family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font #> family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font #> family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font #> family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead #> Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, : #> font family 'Public Sans' not found, will use 'sans' instead"},{"path":"https://nsw-education.github.io/doestyle/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Samuel Gardiner. Author, maintainer. Matthew Finkbeiner. Author. Jonathan McGuire. Author.","code":""},{"path":"https://nsw-education.github.io/doestyle/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gardiner S, Finkbeiner M, McGuire J (2025). doestyle: NSW Department Education branding figures tables. R package version 0.2.2.9000, https://nsw-education.github.io/doestyle/.","code":"@Manual{,   title = {doestyle: NSW Department of Education branding for figures and tables},   author = {Samuel Gardiner and Matthew Finkbeiner and Jonathan McGuire},   year = {2025},   note = {R package version 0.2.2.9000},   url = {https://nsw-education.github.io/doestyle/}, }"},{"path":"https://nsw-education.github.io/doestyle/index.html","id":"doestyle","dir":"","previous_headings":"","what":"NSW Department of Education branding for figures and tables","title":"NSW Department of Education branding for figures and tables","text":"doestyle R package helps produce brand-compliant figures tables NSW Department Education publications. development, already includes features ease use brand colours typesetting ggplot2 figures flextable tables. ’re interested contributing development, please read contributors’ guide /watch contributing doestyle.","code":""},{"path":"https://nsw-education.github.io/doestyle/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"NSW Department of Education branding for figures and tables","text":"doestyle yet CRAN, can easily installed directly Bitbucket remotes package: command can used update installed version doestyle. ’re using RStudio Windows prompts restart R installing, safer choose “” - known RStudio issue around reinstalling packages Windows.","code":"# Install `remotes` if needed if (!require(\"remotes\")) install.packages(\"remotes\")  # Install doestyle and its documentation using `remotes` remotes::install_bitbucket(\"nsw-education/doestyle\", build_vignettes = TRUE)"},{"path":"https://nsw-education.github.io/doestyle/index.html","id":"usage-examples","dir":"","previous_headings":"","what":"Usage examples","title":"NSW Department of Education branding for figures and tables","text":"following examples use data Public Schools Master Dataset, available package dataset named public_schools.","code":"library(tidyverse) library(doestyle)  # The Public Schools Master Dataset head(public_schools) #> # A tibble: 6 × 45 #>   School_code AgeID School_name   Street Town_suburb Postcode Phone School_Email #>   <chr>       <chr> <chr>         <chr>  <chr>       <chr>    <chr> <chr>        #> 1 5423        <NA>  John Brotchi… 1361 … Botany      2019     9316… johnbrotch-… #> 2 8600        86659 Secondary Co… Level… Parramatta  2150     02 7… SCLanguages… #> 3 8473        46360 Chifley Coll… 67 No… MOUNT DRUI… 2770     9625… chifcolsnr-… #> 4 8325        46407 Moree Second… Alber… Moree       2400     6752… mscalberts-… #> 5 8870        46426 St Marys Sen… Kalan… St Marys    2760     9623… stmaryssen-… #> 6 8374        46489 Brisbane Wat… 25 ED… WOY WOY     2256     4341… woywoy-h.sc… #> # ℹ 37 more variables: Website <chr>, Fax <chr>, #> #   latest_year_enrolment_FTE <dbl>, Indigenous_pct <dbl>, LBOTE_pct <dbl>, #> #   ICSEA_value <dbl>, Level_of_schooling <chr>, Selective_school <chr>, #> #   Opportunity_class <chr>, School_specialty_type <chr>, School_subtype <chr>, #> #   Support_classes <lgl>, Preschool_ind <chr>, Distance_education <chr>, #> #   Intensive_english_centre <chr>, School_gender <chr>, #> #   Late_opening_school <chr>, Date_1st_teacher <date>, LGA <chr>, …"},{"path":"https://nsw-education.github.io/doestyle/index.html","id":"quick-branding","dir":"","previous_headings":"Usage examples","what":"Quick branding","title":"NSW Department of Education branding for figures and tables","text":"doestyle provides scale functions scale_colour_doe() scale_fill_doe() easily apply brand colours colour fill aesthetics ggplot2 object. default colour scale, apply scale_colour_doe() arguments:  -brand default fill scale can applied scale_fill_doe(). aware lighter colours, although part department’s official brand palette, may require darker edge meet accessibility requirements contrast.","code":"public_schools |>   filter(Operational_directorate == \"Metropolitan South and West\") |>   ggplot(aes(x = LBOTE_pct, y = FOEI_Value, colour = Intensive_english_centre)) +   geom_point() +   # Add a default department scale to the `colour` aesthetic. Note that `colour`   # has already been mapped onto the value of `Intensive_english_centre` in this   # plot's aesthetic mapping.   scale_colour_doe() public_schools |>   filter(str_detect(Principal_network, \"Connected Communities\")) |>   ggplot(aes(x = Principal_network, fill = Level_of_schooling)) +   geom_bar(colour = \"black\", position = position_dodge(preserve = \"single\")) +   theme(legend.position = \"bottom\") +   labs(y = \"Schools\") +   # Add a default department scale to the `fill` aesthetic. Note that `fill` has   # already been mapped onto the value of `Level_of_schooling` in this plot's   # aesthetic mapping.   scale_fill_doe()"},{"path":"https://nsw-education.github.io/doestyle/index.html","id":"colours","dir":"","previous_headings":"Usage examples","what":"Colours","title":"NSW Department of Education branding for figures and tables","text":"doestyle provides mapping NSW Government named colour palette hex values can used almost R function handles colours. Every colour defined NSW Government Design System available, including subset makes Department Education brand palette. list available colours name, use list_doestyle_colours(): detailed information colour available built-dataset colourdata, can filtered Department Education primary brand colours, auxiliary colours, NSW colours. available colours can also visualised show_colours().  look hex values, use doe_colours(): values can used base R plotting functions, ggplot2 user:","code":"list_doestyle_colours() #> # A tibble: 51 × 2 #>    colour_name hex_value #>    <chr>       <colour>  #>  1 grey-01     • #22272B #>  2 grey-02     • #495054 #>  3 grey-03     • #CDD3D6 #>  4 grey-04     • #EBEBEB #>  5 green-01    • #004000 #>  6 green-02    • #00AA45 #>  7 green-03    • #A8EDB3 #>  8 green-04    • #DBFADF #>  9 teal-01     • #0B3F47 #> 10 teal-02     • #2E808E #> # ℹ 41 more rows colourdata |>   filter(doe_primary) #> # A tibble: 4 × 13 #>   colour_name hex_value family   tone nsw_brand doe_auxillary doe_brand #>   <chr>       <colour>  <chr>   <int> <lgl>     <lgl>         <lgl>     #> 1 blue-01     • #002664 blue        1 TRUE      FALSE         TRUE      #> 2 blue-04     • #CBEDFD blue        4 TRUE      FALSE         TRUE      #> 3 red-02      • #D7153A red         2 TRUE      FALSE         TRUE      #> 4 white       • #FFFFFF neutral     2 TRUE      FALSE         TRUE      #> # ℹ 6 more variables: doe_primary <lgl>, secondary_colour <chr>, #> #   text_colour <chr>, red <int>, green <int>, blue <int> # Show swatches for the department's brand colours: show_colours(\"brand\") # Return hex values for named NSW Government colours: doe_colours(\"blue-01\", \"red-02\") #> <palettes_colour[2]> #> • #002664 #> • #D7153A hist(public_schools$latest_year_enrolment_FTE, col = doe_colours(\"blue-01\"))"},{"path":"https://nsw-education.github.io/doestyle/index.html","id":"theming","dir":"","previous_headings":"Usage examples","what":"Theming","title":"NSW Department of Education branding for figures and tables","text":"doestyle currently contains one ggplot2 theme, theme_doe(). uses minimal non-data ink, sets default font Public Sans, department’s primary brand font face. theme currently attractive - can help make better contributing doestyle!","code":"public_schools |>   group_by(year = year(Date_1st_teacher)) |>   count() |>   ggplot(aes(x = year, y = n)) +   geom_step() +   labs(x = \"Year\", y = \"Government schools opened\") +   # Apply a minimalist theme that uses the Public Sans typeface   theme_doe()"},{"path":"https://nsw-education.github.io/doestyle/index.html","id":"palettes","dir":"","previous_headings":"Usage examples","what":"Palettes","title":"NSW Department of Education branding for figures and tables","text":"Several palettes provided doestyle list lists called doe_palettes. used palette argument, scale_colour_doe() scale_fill_doe() default values provided doe_palettes$default: See help(doe_palettes) information built-palettes. Custom palettes easy create assistance pal_colour() palettes package.","code":"doe_palettes$default #> <palettes_colour[12]> #> • #002664 #> • #D7153A #> • #8CE0FF #> • #FFB8C1 #> • #22272B #> • #146CFD #> • #630019 #> • #495054 #> • #CBEDFD #> • #FFE6EA #> • #CDD3D6 #> • #EBEBEB # Load `palettes` library(palettes)  # Define a custom palette, using named NSW Government colours. my_custom_doe_palette <- pal_colour(   doe_colours(\"blue-02\", \"grey-02\", \"red-02\"))  public_schools |>   ggplot(aes(x = Date_1st_teacher,              y = latest_year_enrolment_FTE,              colour = School_gender,              alpha = School_gender)) +   geom_point() +   scale_alpha_manual(values =  c(1, 0.1, 1)) +   # Apply our custom palette to the `colour` aesthetic. Note that `colour` has   # already been mapped onto the value of `School_gender` in this plot's   # aesthetic mapping.   scale_colour_doe(my_custom_doe_palette)"},{"path":"https://nsw-education.github.io/doestyle/reference/check_font_families.html","id":null,"dir":"Reference","previous_headings":"","what":"Import showtext to make use of DoE fonts — check_font_families","title":"Import showtext to make use of DoE fonts — check_font_families","text":"Import showtext make use DoE fonts","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/check_font_families.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import showtext to make use of DoE fonts — check_font_families","text":"","code":"check_font_families()"},{"path":"https://nsw-education.github.io/doestyle/reference/colourdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Colours provided by doestyle — colourdata","title":"Colours provided by doestyle — colourdata","text":"dataset containing names, hex RGB values, identifiers colour provided doestyle. content can visualised show_colours() manipulated.","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/colourdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Colours provided by doestyle — colourdata","text":"","code":"colourdata"},{"path":"https://nsw-education.github.io/doestyle/reference/colourdata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Colours provided by doestyle — colourdata","text":"object class tbl_df (inherits tbl, data.frame) 51 rows 13 columns.","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/colourdata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Colours provided by doestyle — colourdata","text":"NSW Design System Department Education Brand guidelines","code":""},{"path":[]},{"path":"https://nsw-education.github.io/doestyle/reference/contrast_ratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the contrast ratio between pairs of colours — contrast_ratio","title":"Compute the contrast ratio between pairs of colours — contrast_ratio","text":"Compute contrast ratios pairs colours, using WCAG 2.1 formula.","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/contrast_ratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the contrast ratio between pairs of colours — contrast_ratio","text":"","code":"contrast_ratio(colour1, colour2)"},{"path":"https://nsw-education.github.io/doestyle/reference/contrast_ratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the contrast ratio between pairs of colours — contrast_ratio","text":"colour1, colour2 Character vectors hexadecimal colour values.","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/contrast_ratio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the contrast ratio between pairs of colours — contrast_ratio","text":"contrast_ratio() returns numeric vector contrast ratios, length colour1 colour2.","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/contrast_ratio.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the contrast ratio between pairs of colours — contrast_ratio","text":"Contrast ratio defined \\(\\frac{L_1 + 0.05}{L_2 + 0.05}\\) \\(L_1\\) \\(L_2\\) relative luminances lighter darker colours compared. Contrast ratios range 1 (colour contrast) 21 (maximum contrast). meet WCAG 2.1 minimum (AA) criteria accessibility, contrast ratios adjacent colours must : text, least 4.5 large text (18pt larger, 14pt bold), least 3 non-text plot elements (e.g. patterns, lines, points, borders etc.), least 3 meet WCAG 2.1 enhanced (AAA) contrast requirements, generally ratio 7 required. See WCAG 2.1 success criteria 1.4.3 Contrast (Minimum), 1.4.6 Contrast (Enhanced) 1.4.11 Non-text Contrast.","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/contrast_ratio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the contrast ratio between pairs of colours — contrast_ratio","text":"","code":"backgrounds <- doe_cols(\"white\", \"black\", \"blue-01\", \"grey-04\", \"black\") foregrounds <- doe_cols(\"black\", \"white\", \"blue-03\", \"grey-03\", \"black\")  contrast_ratio(colour1 = backgrounds, colour2 = foregrounds) #> [1] 21.000000 21.000000  9.732217  1.268706  1.000000"},{"path":"https://nsw-education.github.io/doestyle/reference/doe_palettes.html","id":null,"dir":"Reference","previous_headings":"","what":"Palettes provided by doestyle — doe_palettes","title":"Palettes provided by doestyle — doe_palettes","text":"list palettes, organised type.","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/doe_palettes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Palettes provided by doestyle — doe_palettes","text":"","code":"doe_palettes"},{"path":"https://nsw-education.github.io/doestyle/reference/doe_palettes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Palettes provided by doestyle — doe_palettes","text":"object class palettes_palette (inherits vctrs_list_of, vctrs_vctr, list) length 6.","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/doe_palettes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Palettes provided by doestyle — doe_palettes","text":"Qualitative: designed show differences nominal classes Sequential: designed show differences ordered data progress value low high (vice versa) Diverging: designed show differences ordered data progress away central value extremes either end scale Palettes can accessed type name.","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/doe_palettes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Palettes provided by doestyle — doe_palettes","text":"","code":"# Examine one palette at a time doe_palettes$default #> <palettes_colour[12]> #> • #002664 #> • #D7153A #> • #8CE0FF #> • #FFB8C1 #> • #22272B #> • #146CFD #> • #630019 #> • #495054 #> • #CBEDFD #> • #FFE6EA #> • #CDD3D6 #> • #EBEBEB doe_palettes$seq.blues #> <palettes_colour[4]> #> • #CBEDFD #> • #8CE0FF #> • #146CFD #> • #002664  # List all palettes and their colours print(doe_palettes) #> <palettes_palette[6]> #> $default #> <palettes_colour[12]> #> • #002664 #> • #D7153A #> • #8CE0FF #> • #FFB8C1 #> • #22272B #> • #146CFD #> • #630019 #> • #495054 #> • #CBEDFD #> • #FFE6EA #> • #CDD3D6 #> • #EBEBEB #>  #> $qual.doe #> <palettes_colour[12]> #> • #002664 #> • #D7153A #> • #8CE0FF #> • #FFB8C1 #> • #22272B #> • #146CFD #> • #630019 #> • #495054 #> • #CBEDFD #> • #FFE6EA #> • #CDD3D6 #> • #EBEBEB #>  #> $seq.blues #> <palettes_colour[4]> #> • #CBEDFD #> • #8CE0FF #> • #146CFD #> • #002664 #>  #> $seq.reds #> <palettes_colour[4]> #> • #FFE6EA #> • #FFB8C1 #> • #D7153A #> • #630019 #>  #> $seq.greys #> <palettes_colour[4]> #> • #EBEBEB #> • #CDD3D6 #> • #495054 #> • #22272B #>  #> $div.red_blue #> <palettes_colour[7]> #> • #630019 #> • #D7153A #> • #FFB8C1 #> • #EBEBEB #> • #8CE0FF #> • #146CFD #> • #002664 #>   # If you've loaded `palettes`, visualise the available palettes library(palettes) plot(doe_palettes)"},{"path":"https://nsw-education.github.io/doestyle/reference/doestyle-package.html","id":null,"dir":"Reference","previous_headings":"","what":"doestyle: Apply Department of Education branding to figures and tables — doestyle-package","title":"doestyle: Apply Department of Education branding to figures and tables — doestyle-package","text":"doestyle R package containing functions help produce brand-compliant figures NSW Department Education publications.","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/doestyle-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"doestyle: Apply Department of Education branding to figures and tables — doestyle-package","text":"Maintainer: Samuel Gardiner samuel.gardiner7@det.nsw.edu.au (ORCID) Authors: Matthew Finkbeiner matthew.finkbeiner@det.nsw.edu.au Jonathan McGuire jonathan.mcguire1@det.nsw.edu.au","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/geom_downerrorbar.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a down errorbar to a ggplot2 plot — geom_downerrorbar","title":"Add a down errorbar to a ggplot2 plot — geom_downerrorbar","text":"Add lower portion errorbar ggplot plot. allows halves errorbars different colours.","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/geom_downerrorbar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a down errorbar to a ggplot2 plot — geom_downerrorbar","text":"","code":"geom_downerrorbar(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://nsw-education.github.io/doestyle/reference/geom_downerrorbar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a down errorbar to a ggplot2 plot — geom_downerrorbar","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... parameters passed ggplot2::geom_errorbar(). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. include legend keys levels, even data exists, use TRUE.  NA, levels shown legend, unobserved levels omitted. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. annotation_borders().","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/geom_downerrorbar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a down errorbar to a ggplot2 plot — geom_downerrorbar","text":"","code":"library(doestyle) library(ggplot2)  df <- data.frame(   observation = c(\"A\", \"B\", \"C\"),   lower = c(1, 2, 3),   estimate = c(2, 4, 4),   upper = c(3, 6, 5) )  ggplot(df, aes(x = observation,                y = estimate,                ymin = lower,                ymax = upper)) +   geom_col() +   geom_uperrorbar(width = 1/10) +   geom_downerrorbar(width = 1/10,                     colour = \"white\")"},{"path":"https://nsw-education.github.io/doestyle/reference/geom_uperrorbar.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an up errorbar to a ggplot2 plot — geom_uperrorbar","title":"Add an up errorbar to a ggplot2 plot — geom_uperrorbar","text":"Add upper portion errorbar ggplot plot. allows halves errorbars different colours.","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/geom_uperrorbar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an up errorbar to a ggplot2 plot — geom_uperrorbar","text":"","code":"geom_uperrorbar(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://nsw-education.github.io/doestyle/reference/geom_uperrorbar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an up errorbar to a ggplot2 plot — geom_uperrorbar","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... parameters passed ggplot2::geom_errorbar(). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. include legend keys levels, even data exists, use TRUE.  NA, levels shown legend, unobserved levels omitted. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. annotation_borders().","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/geom_uperrorbar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add an up errorbar to a ggplot2 plot — geom_uperrorbar","text":"","code":"library(doestyle) library(ggplot2)  df <- data.frame(   observation = c(\"A\", \"B\", \"C\"),   lower = c(1, 2, 3),   estimate = c(2, 4, 4),   upper = c(3, 6, 5) )  ggplot(df, aes(x = observation,                y = estimate,                ymin = lower,                ymax = upper)) +   geom_col() +   geom_uperrorbar(width = 1/10) +   geom_downerrorbar(width = 1/10,                     colour = \"white\")"},{"path":"https://nsw-education.github.io/doestyle/reference/get_colours.html","id":null,"dir":"Reference","previous_headings":"","what":"Get brand colours by name — get_colours","title":"Get brand colours by name — get_colours","text":"Get brand colours name","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/get_colours.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get brand colours by name — get_colours","text":"","code":"get_colours(...)  doe_colours(...)  doe_cols(...)"},{"path":"https://nsw-education.github.io/doestyle/reference/get_colours.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get brand colours by name — get_colours","text":"... Colour name(s). May supplied character vector individual arguments.","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/get_colours.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get brand colours by name — get_colours","text":"get_colours() returns character vector containing hex values requested brand colour.","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/get_colours.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get brand colours by name — get_colours","text":"get_colours() return hex values valid NSW Department Education colour names. list available colours, use list_doestyle_colours(). plot available colours, use show_colours().","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/get_colours.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get brand colours by name — get_colours","text":"","code":"get_colours(\"blue-01\", \"red-02\", \"blue-04\") #> <palettes_colour[3]> #> • #002664 #> • #D7153A #> • #CBEDFD get_colours(c(\"red-01\", \"red-02\", \"red-03\", \"red-04\")) #> <palettes_colour[4]> #> • #630019 #> • #D7153A #> • #FFB8C1 #> • #FFE6EA"},{"path":"https://nsw-education.github.io/doestyle/reference/list_doestyle_colours.html","id":null,"dir":"Reference","previous_headings":"","what":"List valid NSW or DoE colours and their hex values — list_doestyle_colours","title":"List valid NSW or DoE colours and their hex values — list_doestyle_colours","text":"List valid NSW DoE colours hex values","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/list_doestyle_colours.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List valid NSW or DoE colours and their hex values — list_doestyle_colours","text":"","code":"list_doestyle_colours()"},{"path":"https://nsw-education.github.io/doestyle/reference/list_doestyle_colours.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List valid NSW or DoE colours and their hex values — list_doestyle_colours","text":"tibble containing names valid colours hex values.","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/list_doestyle_colours.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List valid NSW or DoE colours and their hex values — list_doestyle_colours","text":"","code":"list_doestyle_colours() #> # A tibble: 51 × 2 #>    colour_name hex_value #>    <chr>       <colour>  #>  1 grey-01     • #22272B #>  2 grey-02     • #495054 #>  3 grey-03     • #CDD3D6 #>  4 grey-04     • #EBEBEB #>  5 green-01    • #004000 #>  6 green-02    • #00AA45 #>  7 green-03    • #A8EDB3 #>  8 green-04    • #DBFADF #>  9 teal-01     • #0B3F47 #> 10 teal-02     • #2E808E #> # ℹ 41 more rows list_doestyle_colours() |> print(n = 50) #> # A tibble: 51 × 2 #>    colour_name hex_value #>    <chr>       <colour>  #>  1 grey-01     • #22272B #>  2 grey-02     • #495054 #>  3 grey-03     • #CDD3D6 #>  4 grey-04     • #EBEBEB #>  5 green-01    • #004000 #>  6 green-02    • #00AA45 #>  7 green-03    • #A8EDB3 #>  8 green-04    • #DBFADF #>  9 teal-01     • #0B3F47 #> 10 teal-02     • #2E808E #> 11 teal-03     • #8CDBE5 #> 12 teal-04     • #D1EEEA #> 13 blue-01     • #002664 #> 14 blue-02     • #146CFD #> 15 blue-03     • #8CE0FF #> 16 blue-04     • #CBEDFD #> 17 purple-01   • #441170 #> 18 purple-02   • #8055F1 #> 19 purple-03   • #CEBFFF #> 20 purple-04   • #E6E1FD #> 21 fuchsia-01  • #65004D #> 22 fuchsia-02  • #D912AE #> 23 fuchsia-03  • #F4B5E6 #> 24 fuchsia-04  • #FDDEF2 #> 25 red-01      • #630019 #> 26 red-02      • #D7153A #> 27 red-03      • #FFB8C1 #> 28 red-04      • #FFE6EA #> 29 orange-01   • #941B00 #> 30 orange-02   • #F3631B #> 31 orange-03   • #FFCE99 #> 32 orange-04   • #FDEDDF #> 33 yellow-01   • #694800 #> 34 yellow-02   • #FAAF05 #> 35 yellow-03   • #FDE79A #> 36 yellow-04   • #FFF4CF #> 37 brown-01    • #523719 #> 38 brown-02    • #B68D5D #> 39 brown-03    • #E8D0B5 #> 40 brown-04    • #EDE3D7 #> 41 black       • #000000 #> 42 white       • #FFFFFF #> 43 off-white   • #F2F2F2 #> 44 grey-2%     • #FAFAFA #> 45 grey-10%    • #E5E5E5 #> 46 grey-15%    • #D9D9D9 #> 47 grey-30%    • #B3B3B3 #> 48 grey-60%    • #666666 #> 49 dark-grey   • #333333 #> 50 label-blue  • #15397F #> # ℹ 1 more row"},{"path":"https://nsw-education.github.io/doestyle/reference/palettes-internal.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal palettes methods — palettes-internal","title":"Internal palettes methods — palettes-internal","text":"Internal palettes methods","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/public_schools.html","id":null,"dir":"Reference","previous_headings":"","what":"The New South Wales Education Public Schools Master Dataset — public_schools","title":"The New South Wales Education Public Schools Master Dataset — public_schools","text":"master dataset contains comprehensive information government schools NSW. Data items include school locations, latitude longitude coordinates, school type, student enrolment numbers, electorate information, contact details . dataset publicly available Data NSW website.","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/public_schools.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The New South Wales Education Public Schools Master Dataset — public_schools","text":"","code":"public_schools"},{"path":"https://nsw-education.github.io/doestyle/reference/public_schools.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The New South Wales Education Public Schools Master Dataset — public_schools","text":"object class spec_tbl_df (inherits tbl_df, tbl, data.frame) 2219 rows 45 columns.","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/public_schools.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"The New South Wales Education Public Schools Master Dataset — public_schools","text":"https://data.nsw.gov.au/data/dataset/nsw-education-nsw-public-schools-master-dataset","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/relative_luminance.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the relative luminance of an sRGB colour — relative_luminance","title":"Compute the relative luminance of an sRGB colour — relative_luminance","text":"Compute relative luminance sRGB colour(s). See WCAG 2.1 definition: relative luminance.","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/relative_luminance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the relative luminance of an sRGB colour — relative_luminance","text":"","code":"relative_luminance(hex_values)"},{"path":"https://nsw-education.github.io/doestyle/reference/relative_luminance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the relative luminance of an sRGB colour — relative_luminance","text":"hex_values character vector hex value(s).","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/relative_luminance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the relative luminance of an sRGB colour — relative_luminance","text":"relative_luminance() returns numeric vector luminance values.","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/relative_luminance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the relative luminance of an sRGB colour — relative_luminance","text":"","code":"relative_luminance(c(\"#ffffff\", \"#000000\", \"#002664\", \"#d7153a\")) #> [1] 1.00000000 0.00000000 0.02306327 0.15288892 relative_luminance(doe_cols(\"white\", \"black\", \"blue-01\", \"red-02\")) #> [1] 1.00000000 0.00000000 0.02306327 0.15288892"},{"path":"https://nsw-education.github.io/doestyle/reference/scale_colour_doe.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a DoE palette to the colour aesthetic — scale_colour_doe","title":"Apply a DoE palette to the colour aesthetic — scale_colour_doe","text":"Apply DoE palette colour aesthetic","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/scale_colour_doe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a DoE palette to the colour aesthetic — scale_colour_doe","text":"","code":"scale_colour_doe(   palette = doe_palettes$default,   discrete = TRUE,   direction = 1,   ... )"},{"path":"https://nsw-education.github.io/doestyle/reference/scale_colour_doe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a DoE palette to the colour aesthetic — scale_colour_doe","text":"palette object class palettes_palette. Several useful palettes ready use list doe_palettes, included doestyle package. default doe_palettes$qualitative$default, uses -brand colours defined NSW Department Education Brand Guidelines. discrete Logical indicating whether desired scale discrete. default TRUE. FALSE, continuous scale interpolated colours constructed, instead. direction Sets order colours scale. 1, default, colours ordered first last appear palette. -1, order colours reversed. ... Additional arguments passed ggplot2::discrete_scale() ggplot2::continuous_scale().","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/scale_colour_doe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a DoE palette to the colour aesthetic — scale_colour_doe","text":"scale function can added ggplot2 plot.","code":""},{"path":[]},{"path":"https://nsw-education.github.io/doestyle/reference/scale_colour_doe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply a DoE palette to the colour aesthetic — scale_colour_doe","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union library(ggplot2) library(doestyle)  # Plot growth in primary and secondary schools over time public_schools |>  filter(Level_of_schooling %in% c(\"Primary School\", \"Secondary School\")) |>  arrange(Date_1st_teacher) |>  mutate(    count = 1,    cumulative_schools = cumsum(count),    .by = Level_of_schooling) |>  ggplot(aes(x = Date_1st_teacher,             y = cumulative_schools,             colour = Level_of_schooling)) +  geom_step() +  # Add a default DoE colour scale  scale_colour_doe()"},{"path":"https://nsw-education.github.io/doestyle/reference/scale_fill_doe.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a DoE palette to the fill aesthetic — scale_fill_doe","title":"Apply a DoE palette to the fill aesthetic — scale_fill_doe","text":"Apply DoE palette fill aesthetic","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/scale_fill_doe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a DoE palette to the fill aesthetic — scale_fill_doe","text":"","code":"scale_fill_doe(   palette = doe_palettes$default,   discrete = TRUE,   direction = 1,   ... )"},{"path":"https://nsw-education.github.io/doestyle/reference/scale_fill_doe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a DoE palette to the fill aesthetic — scale_fill_doe","text":"palette object class palettes_palette. Several useful palettes ready use list doe_palettes, included doestyle package. default doe_palettes$qualitative$default, uses -brand colours defined NSW Department Education Brand Guidelines. discrete Logical indicating whether desired scale discrete. default TRUE. FALSE, continuous scale interpolated colours constructed, instead. direction Sets order colours scale. 1, default, colours ordered first last appear palette. -1, order colours reversed. ... Additional arguments passed ggplot2::discrete_scale() ggplot2::continuous_scale().","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/scale_fill_doe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a DoE palette to the fill aesthetic — scale_fill_doe","text":"scale function can added ggplot2 plot.","code":""},{"path":[]},{"path":"https://nsw-education.github.io/doestyle/reference/scale_fill_doe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply a DoE palette to the fill aesthetic — scale_fill_doe","text":"","code":"library(doestyle) library(dplyr) library(ggplot2)  public_schools |>   filter(grepl(\"Connected Communities\", Principal_network)) |>   ggplot(aes(x = Principal_network, fill = Level_of_schooling)) +   geom_bar(colour = \"black\", position = position_dodge(preserve = \"single\")) +   theme(legend.position = \"bottom\") +   labs(y = \"Schools\") +   # Add a default department scale to the `fill` aesthetic.   scale_fill_doe()"},{"path":"https://nsw-education.github.io/doestyle/reference/secondary_colours.html","id":null,"dir":"Reference","previous_headings":"","what":"Get secondary colours for named brand colours — secondary_colours","title":"Get secondary colours for named brand colours — secondary_colours","text":"Secondary colours -brand colours can used pattern fills visual elements need contrast -brand fill colour. NSW Design System colour corresponding secondary colour available via secondary_colours().","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/secondary_colours.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get secondary colours for named brand colours — secondary_colours","text":"","code":"secondary_colours(...)"},{"path":"https://nsw-education.github.io/doestyle/reference/secondary_colours.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get secondary colours for named brand colours — secondary_colours","text":"... Colour name(s). May supplied character vector individual arguments.","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/secondary_colours.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get secondary colours for named brand colours — secondary_colours","text":"secondary_colours() returns hex value appropriate secondary colour -brand colour name supplied arguments.","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/secondary_colours.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get secondary colours for named brand colours — secondary_colours","text":"","code":"secondary_colours(\"red-02\", \"blue-01\", \"blue-04\") #> <palettes_colour[3]> #> • #FFB8C1 #> • #146CFD #> • #002664"},{"path":"https://nsw-education.github.io/doestyle/reference/show_colours.html","id":null,"dir":"Reference","previous_headings":"","what":"Show swatches for doestyle colours — show_colours","title":"Show swatches for doestyle colours — show_colours","text":"show_colours() produces plot shows names colours available doestyle.","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/show_colours.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show swatches for doestyle colours — show_colours","text":"","code":"show_colours(swatches = c(\"brand\", \"primary\", \"nsw\", \"all\"), linewidth = 1)"},{"path":"https://nsw-education.github.io/doestyle/reference/show_colours.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show swatches for doestyle colours — show_colours","text":"swatches name set colours display. \"brand\" displays department's brand colours ; \"primary\" shows department's primary brand colours ; \"nsw\" shows NSW Government brand colours; \"\" shows every colour included doestyle, including additional -brand colours UX element specified department's Brand guidelines document. linewidth thickness swatch's coloured border.","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/show_colours.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show swatches for doestyle colours — show_colours","text":"show_colours() returns ggplot2 gg object, can manipulated user-specified themes etc.","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/show_colours.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show swatches for doestyle colours — show_colours","text":"","code":"show_colours()"},{"path":"https://nsw-education.github.io/doestyle/reference/text_colours.html","id":null,"dir":"Reference","previous_headings":"","what":"Get text colours for named brand colours — text_colours","title":"Get text colours for named brand colours — text_colours","text":"Text colours designed plotting text -brand fill colour. NSW Design System colour corresponding text colour available via text_colours().","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/text_colours.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get text colours for named brand colours — text_colours","text":"","code":"text_colours(...)"},{"path":"https://nsw-education.github.io/doestyle/reference/text_colours.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get text colours for named brand colours — text_colours","text":"... Colour name(s). May supplied character vector individual arguments.","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/text_colours.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get text colours for named brand colours — text_colours","text":"secondary_colours() returns hex value appropriate text colour -brand colour name supplied arguments.","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/text_colours.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get text colours for named brand colours — text_colours","text":"","code":"text_colours(\"red-02\", \"blue-01\", \"blue-04\") #> <palettes_colour[3]> #> • #FFFFFF #> • #FFFFFF #> • #000000"},{"path":"https://nsw-education.github.io/doestyle/reference/theme_doe.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply the DoE theme to a ggplot2 plot — theme_doe","title":"Apply the DoE theme to a ggplot2 plot — theme_doe","text":"Apply minimalist DoE theme. default, sets font family Public Sans enables showtext::showtext_auto() allow easy font display plots.","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/theme_doe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply the DoE theme to a ggplot2 plot — theme_doe","text":"","code":"theme_doe(base_size = 16, base_family = \"Public Sans\", ...)"},{"path":"https://nsw-education.github.io/doestyle/reference/theme_doe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply the DoE theme to a ggplot2 plot — theme_doe","text":"base_size Base font size, given pts. base_family Base font family. Defaults NSW Government -brand font family, Public Sans. ... parameters passed ggplot2::theme().","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/theme_doe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply the DoE theme to a ggplot2 plot — theme_doe","text":"","code":"library(doestyle) library(ggplot2)  public_schools |>  ggplot(aes(y = Operational_directorate)) +  geom_bar() +  # Apply theme_doe(): minimal decoration and Public Sans typeface  theme_doe() #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead #> Warning: font family 'Public Sans' not found, will use 'sans' instead"},{"path":"https://nsw-education.github.io/doestyle/reference/theme_doe_flextable.html","id":null,"dir":"Reference","previous_headings":"","what":"The DoE flextable theme — theme_doe_flextable","title":"The DoE flextable theme — theme_doe_flextable","text":"Apply DoE brand-compliant theme flextable object.","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/theme_doe_flextable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The DoE flextable theme — theme_doe_flextable","text":"","code":"theme_doe_flextable(x)  apply_DoE_zebra_format(x)"},{"path":"https://nsw-education.github.io/doestyle/reference/theme_doe_flextable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The DoE flextable theme — theme_doe_flextable","text":"x flextable object","code":""},{"path":"https://nsw-education.github.io/doestyle/reference/theme_doe_flextable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The DoE flextable theme — theme_doe_flextable","text":"mpg cyl disp hp drat wt qsec vs gear carb 21.0 6 160 110 3.90 2.620 16.46 0 1 4 4 21.0 6 160 110 3.90 2.875 17.02 0 1 4 4 22.8 4 108 93 3.85 2.320 18.61 1 1 4 1 21.4 6 258 110 3.08 3.215 19.44 1 0 3 1 18.7 8 360 175 3.15 3.440 17.02 0 0 3 2 18.1 6 225 105 2.76 3.460 20.22 1 0 3 1","code":"head(mtcars) |>   flextable::flextable() |>   theme_doe_flextable() .cl-8fef08bc{}.cl-8fe81d90{font-family:'DejaVu Sans';font-size:11pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 38, 100, 1.00);background-color:transparent;}.cl-8fe81da4{font-family:'DejaVu Sans';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-8feafda8{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-8feb1ca2{width:0.591in;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(215, 21, 58, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8feb1cac{width:0.591in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8feb1cad{width:0.591in;background-color:rgba(242, 242, 242, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}mpgcyldisphpdratwtqsecvsamgearcarb21.061601103.902.62016.46014421.061601103.902.87517.02014422.84108933.852.32018.61114121.462581103.083.21519.44103118.783601753.153.44017.02003218.162251052.763.46020.221031"},{"path":"https://nsw-education.github.io/doestyle/news/index.html","id":"doestyle-development-version","dir":"Changelog","previous_headings":"","what":"doestyle (development version)","title":"doestyle (development version)","text":"Added Contributors’ Guide (Sam Gardiner) New geoms: geom_uperrorbar() geom_downerrorbar() (Jonathan McGuire) New functions generating secondary palettes patterns text: get_secondary_colours() get_text_colours(). Secondary text colours chosen meet minimum accessibility standards contrast. (Sam Gardiner) New functions computing relative luminance contrast ratio: relative_luminance() contrast_ratio(). functions can used check colour combinations meet accessibility standards.","code":""},{"path":"https://nsw-education.github.io/doestyle/news/index.html","id":"doestyle-022","dir":"Changelog","previous_headings":"","what":"doestyle 0.2.2","title":"doestyle 0.2.2","text":"Include example dataset public_schools (Sam Gardiner)","code":""},{"path":"https://nsw-education.github.io/doestyle/news/index.html","id":"fixes-0-2-2","dir":"Changelog","previous_headings":"","what":"Fixes","title":"doestyle 0.2.2","text":"Switch vignette renderer knitr, avoid package installation problems systems (Sam Gardiner)","code":""},{"path":"https://nsw-education.github.io/doestyle/news/index.html","id":"doestyle-021","dir":"Changelog","previous_headings":"","what":"doestyle 0.2.1","title":"doestyle 0.2.1","text":"Pass arguments theme_doe() ggplot2::theme() via ... (Matthew Finkbeiner) Added vignette “Extending theme_doe()” examples (Matthew Finkbeiner, Sam Gardiner)","code":""},{"path":"https://nsw-education.github.io/doestyle/news/index.html","id":"doestyle-020","dir":"Changelog","previous_headings":"","what":"doestyle 0.2.0","title":"doestyle 0.2.0","text":"Added optional arguments theme_doe() allow specification fonts Public Sans base size 16 points (Matthew Finkbeiner).","code":""},{"path":"https://nsw-education.github.io/doestyle/news/index.html","id":"doestyle-010","dir":"Changelog","previous_headings":"","what":"doestyle 0.1.0","title":"doestyle 0.1.0","text":"Initial release.","code":""}]
